# Generated by Django 5.2 on 2025-05-05 19:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(db_column='nome', help_text='Nome completo do médico', max_length=255, verbose_name='Nome completo')),
                ('crm', models.CharField(db_column='crm', help_text='Registro profissional do médico', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Formato inválido para CRM. Ex: SP123456', regex='^[A-Z]{2}\\d{4,6}$')], verbose_name='CRM')),
                ('especialidade', models.CharField(db_column='especialidade', help_text='Ex: Cardiologia, Dermatologia', max_length=100, verbose_name='Especialidade')),
                ('email', models.EmailField(db_column='email', error_messages={'unique': 'Já existe um médico com este e-mail.'}, help_text='E-mail de contato', max_length=254, unique=True, verbose_name='E-mail')),
                ('telefone', models.CharField(db_column='telefone', help_text='Telefone profissional', max_length=15, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido.', regex='^\\(?\\d{2}\\)?[\\s-]?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone profissional')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, db_column='data_cadastro', help_text='Data de inserção do cadastro', verbose_name='Data de cadastro')),
            ],
            options={
                'verbose_name': 'Médico',
                'verbose_name_plural': 'Médicos',
                'db_table': 'medico',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['crm'], name='idx_crm'), models.Index(fields=['email'], name='idx_email_medico')],
            },
        ),
        migrations.CreateModel(
            name='HorarioDisponivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('segunda', 'Segunda-feira'), ('terca', 'Terça-feira'), ('quarta', 'Quarta-feira'), ('quinta', 'Quinta-feira'), ('sexta', 'Sexta-feira'), ('sabado', 'Sábado')], db_column='dia_semana', help_text='Dia da semana (segunda, terça, etc.)', max_length=10, verbose_name='Dia da semana')),
                ('hora_inicio', models.TimeField(db_column='hora_inicio', help_text='Início do horário de atendimento', verbose_name='Hora de início')),
                ('hora_fim', models.TimeField(db_column='hora_fim', help_text='Fim do horário de atendimento', verbose_name='Hora de fim')),
                ('medico', models.ForeignKey(db_column='id_medico', on_delete=django.db.models.deletion.CASCADE, related_name='horarios_disponiveis', to='medicos.medico', verbose_name='Médico')),
            ],
            options={
                'verbose_name': 'Horário Disponível',
                'verbose_name_plural': 'Horários Disponíveis',
                'db_table': 'horario_disponivel',
                'ordering': ['medico', 'dia_semana', 'hora_inicio'],
                'indexes': [models.Index(fields=['medico', 'dia_semana'], name='idx_horario_medico_dia')],
                'unique_together': {('medico', 'dia_semana', 'hora_inicio', 'hora_fim')},
            },
        ),
    ]
